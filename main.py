import os
import time
import requests
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è DISPLAY –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Xvfb
os.environ["DISPLAY"] = ":99"  # –£–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –¥–∏—Å–ø–ª–µ–π

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Selenium
chrome_options = Options()
chrome_options.add_argument("--headless")  # –ó–∞–ø—É—Å–∫ –±–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
chrome_options.add_argument("--disable-gpu")
chrome_options.add_argument("--no-sandbox")

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ ChromeDriver –∏ –∑–∞–ø—É—Å–∫ —Å –æ–ø—Ü–∏—è–º–∏
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)
driver.implicitly_wait(20)  # –£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ (–ø–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤)

# URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
url = "https://www.houseofmodelcars.com/eng/collection/formula-1/6?limit=192&sort=price&direction=asc&m=9+19+47+48+10+1+2&s=13&y=2024+2023+2022+2021+2020+2019+2018+2017+2007+2006+2001+2000"

# –§–∞–π–ª —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
data_file = "model_info.txt"

# Telegram
bot_token = "6858480572:AAGUJwUq_UevIhrbQS6cG2nN0hfyDw8yh54"
chat_id = "-4134676016"

# –§—É–Ω–∫—Ü–∏—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
def wait_for_products(timeout=30):
    WebDriverWait(driver, timeout).until(
        EC.presence_of_element_located((By.CLASS_NAME, "product-block-info-wrapper"))
    )

# –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
def read_file():
    try:
        with open(data_file, "r", encoding="utf-8") as f:
            return set(line.strip() for line in f.readlines())
    except FileNotFoundError:
        return set()

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
def send_telegram_message(message, bot_token, chat_id):
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    params = {
        "chat_id": chat_id,
        "text": message,
    }
    response = requests.get(url, params=params)
    return response.json()

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
try:
    while True:
        previous_items = read_file()
        driver.get(url)

        wait_for_products()  # –ñ–¥—ë–º, –ø–æ–∫–∞ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è

        # –°–∫—Ä–æ–ª–ª–∏–º –¥–æ –∫–æ–Ω—Ü–∞
        scroll_pause_time = 2
        last_height = driver.execute_script("return document.body.scrollHeight")

        while True:
            driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
            time.sleep(scroll_pause_time)
            new_height = driver.execute_script("return document.body.scrollHeight")
            if new_height == last_height:
                break
            last_height = new_height

        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        products = driver.find_elements(By.CLASS_NAME, "col-12.col-sm-6.col-md-6.col-lg-4.col-xl-3")
        current_items = set()

        for product in products:
            try:
                info_tag = product.find_element(By.CLASS_NAME, "product-block-info-wrapper")
                info = " ".join(info_tag.text.strip().split()).replace("Details ¬ª", "").strip()
                current_items.add(info)
            except Exception:
                continue

        # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
        new_models = current_items - previous_items
        ended_models = previous_items - current_items

        message = ""

        if new_models or ended_models:
            if new_models:
                message += "\nüî• –ù–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –≤ –ì–æ–ª–ª–∞–Ω–¥–∏–∏:\n"
                for item in sorted(new_models):
                    message += f"+ {item}\n"

            if ended_models:
                message += "\n‚ùå –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –º–æ–¥–µ–ª–∏ –≤ –ì–æ–ª–ª–∞–Ω–¥–∏–∏:\n"
                for item in sorted(ended_models):
                    message += f"- {item}\n"
        else:
            message = "–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç –≤ –ì–æ–ª–ª–∞–Ω–¥–∏–∏."

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        send_telegram_message(message, bot_token, chat_id)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª
        with open(data_file, "w", encoding="utf-8") as f:
            for item in sorted(current_items):
                f.write(item + "\n")

        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ (10 –º–∏–Ω—É—Ç)
        time.sleep(600)

except KeyboardInterrupt:
    print("–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
finally:
    driver.quit()
